<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd 
	 http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
 	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<ehcache:config cache-manager="cacheManager">
		<ehcache:evict-expired-elements
			interval="60" />
	</ehcache:config>


	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="ehcache.xml" />
	</bean>

	<ehcache:proxy id="contactDAO" refId="contactDAOTarget">
		<ehcache:caching cacheName="contactCache" methodName="findAll" />
		<ehcache:flushing cacheNames="contactCache"
			methodName="createContact" when="after" />
	</ehcache:proxy>

	<bean id="contactDAOTarget" class="com.vani.ContactDAOImpl">
		<property name="namedParameterJdbcTemplate" ref="jdbcTemplate"></property>
	</bean>

	<!-- <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> <property 
		name="username" value="root" /> <property name="password" value="password" 
		/> <property name="initialSize" value="5" /> <property name="url" value="jdbc:mysql://localhost:3306/springjpa" 
		/> </bean> -->


	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>database.properties</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg type="javax.sql.DataSource" ref="datasource" />
	</bean>



</beans>
       