<?xml version="1.0" encoding="us-ascii"?>

<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  targetNamespace="http://mpilone.org/weather"
  xmlns="http://schemas.xmlsoap.org/wsdl/"
  xmlns:tns="http://mpilone.org/weather">
  
  <documentation>
   The weather service which supports the storage and retrieval of weather information
   as well as simple temperature conversions.
  </documentation>
  
  <types>
    <xs:schema elementFormDefault="qualified"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      targetNamespace="http://mpilone.org/weather">
      <xs:include schemaLocation="WeatherServiceMessages.xsd" />
    </xs:schema>
  </types>
  
  <message name="ConvertTemperature">
    <part name="parameters" element="tns:ConvertTemperature" />
  </message>
  <message name="ConvertTemperatureResponse">
    <part name="parameters" element="tns:ConvertTemperatureResponse" />
  </message>
  <message name="GetWeatherReport">
    <part name="parameters" element="tns:GetWeatherReport" />
  </message>
  <message name="GetWeatherReportResponse">
    <part name="parameters" element="tns:GetWeatherReportResponse" />
  </message>
  <message name="SaveWeatherUpdate">
    <part name="parameters" element="tns:SaveWeatherUpdate" />
  </message>
  <message name="SaveWeatherUpdateResponse">
    <part name="parameters" element="tns:SaveWeatherUpdateResponse" />
  </message>
 
  <portType name="WeatherServicePort">
    <operation name="ConvertTemperature">
      <documentation>
        Converts the given temperature to the new scale. This method assumes that
        the given temperature is in the opposite scale before conversion.
      </documentation>
      <input message="tns:ConvertTemperature" />
      <output message="tns:ConvertTemperatureResponse" />
    </operation>
    <operation name="GetWeatherReport">
      <documentation>
        Gets the weather report for the given zipcode. If no report has been
        recorded for the zipcode, null is returned.
      </documentation>
      <input message="tns:GetWeatherReport" />
      <output message="tns:GetWeatherReportResponse" />
    </operation>
    <operation name="SaveWeatherUpdate">
      <documentation>
        Saves a weather update for the given zipcode. If a report already exists
        for the zipcode, it will be replaced.
      </documentation>
      <input message="tns:SaveWeatherUpdate" />
      <output message="tns:SaveWeatherUpdateResponse" />
    </operation>
  </portType>
  
  <binding name="WeatherServicePort"
    type="tns:WeatherServicePort">
    <soap:binding style="document"
      transport="http://schemas.xmlsoap.org/soap/http" />
    <operation name="ConvertTemperature">
      <soap:operation soapAction="" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="GetWeatherReport">
      <soap:operation soapAction="" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
    <operation name="SaveWeatherUpdate">
      <soap:operation soapAction="" style="document" />
      <input>
        <soap:body use="literal" />
      </input>
      <output>
        <soap:body use="literal" />
      </output>
    </operation>
  </binding>
  
  <service name="WeatherService">
    <port name="WeatherServicePort"
      binding="tns:WeatherServicePort">
      <soap:address
        location="http://localhost:8080/weather/soap/weather" />
    </port>
  </service>
</definitions>